<UserControl x:Class="youtube_dl_gui.Views.DownloadPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:youtube_dl_gui.Views"
             xmlns:viewModels="clr-namespace:youtube_dl_gui.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:DownloadPageViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="450" d:DesignWidth="800" 
             FontSize="14">


    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="44"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="44 "/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="36"/>
        </Grid.ColumnDefinitions>


        <TextBox Grid.Row="1" Grid.ColumnSpan="99" TextWrapping="Wrap" x:Name="InputTextBox" 
                     Background="{DynamicResource DownloadPageBackground}"
                     Text="{Binding URLInputText}">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </TextBox.Resources>

        </TextBox>

        <Button Grid.Row="2" Grid.Column="1"
                Width="32" Height="32"
                BorderThickness="1"
                BorderBrush="Black"
                Background="{DynamicResource DownloadPageBackground}"
                HorizontalAlignment="Right"
                Foreground="#413D65"
                Command="{Binding AddURLsCommand}">
            <Image Source="/Images/plus-fat.png" Height="16"/>

            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2 2 2 2"/>
                </Style>
            </Button.Resources>
        </Button>


        <DataGrid Grid.Row="3" Grid.ColumnSpan="99"
                  BorderThickness="0" x:Name="VideoSourceDataGrid" 
                  Background="{DynamicResource DownloadPageBackground}"
                  AutoGenerateColumns="False"
                  HeadersVisibility="Column"
                  ColumnHeaderHeight="25"
                  FontSize="12"
                  IsReadOnly="True"
                  ItemsSource="{Binding Jobs}"
                  MouseMove="VideoSourceDataGrid_OnMouseMove">


            <DataGrid.Columns>
                <DataGridTextColumn Header="Name"
                                    Width="6*"
                                    Binding="{Binding Source.FileName}"></DataGridTextColumn>

                <DataGridTextColumn Header="Duration"
                                    Width="*"
                                    Binding="{Binding Source.Duration}"></DataGridTextColumn>

                <DataGridTextColumn Header="%"
                                    Width=".5*"
                                    Binding="{Binding Source.DownloadLog.DownloadPercentage}"></DataGridTextColumn>

                <DataGridTextColumn Header="Size"
                                    Width="*"
                                    Binding="{Binding Source.DownloadLog.FileSize}"></DataGridTextColumn>


                <DataGridTextColumn Header="Speed"
                                    Width="*"
                                    Binding="{Binding Source.DownloadLog.DownloadSpeed}"></DataGridTextColumn>


                <DataGridTextColumn Header="ETA"
                                    Width="*"
                                    Binding="{Binding Source.DownloadLog.ETA}"></DataGridTextColumn>

                <DataGridTextColumn Header="Status"
                                    Width="*"
                                    Binding="{Binding Status}"></DataGridTextColumn>
                <DataGridTextColumn Header="Stream"
                                    Width="*"
                                    Binding="{Binding Source.DownloadLog.IsLiveStream}"></DataGridTextColumn>

                <DataGridTemplateColumn Header="Formats">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!-- Why doesn't it update on propertychanged implicitly? When would you not want a users selection to update immediately? Why did I spend 4+ hours on this combobox -->
                            <ComboBox ItemsSource="{Binding Source.Formats}"
                                      SelectedItem="{Binding Source.Formats[0] }"
                                      IsEditable="False"
                                      IsReadOnly="True"
                                      SelectedValue="{Binding Source.SelectedFormat, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedValuePath="Height"
                                      DisplayMemberPath="ResolutionLabel">
                                <!-- Selected value is based on height, because to keep things simple we're just downloading videos based on resolution @ 'best'  -->
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Cancel Job Button -->
                <DataGridTemplateColumn Header=""
                                        Width="0.2*">
                    <!-- Use converter ? convert job status to visible/hidden -->
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Command="{Binding ElementName=VideoSourceDataGrid,
                                    Path=DataContext.CancelRemoveJobCommand}"
                                    CommandParameter="{Binding}"
                                    Content="X" 
                                    FontWeight="DemiBold"
                                    Width="10"
                                    Height="10"
                                    FontSize="8"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Padding="0 -2 0 0"
                                    Margin=" 0 2 0 2"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

            </DataGrid.Columns>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Waiting">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Downloading">
                            <Setter Property="Background" Value="LightGreen"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Success">
                            <Setter Property="Background" Value="MediumSpringGreen"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Failed">
                            <Setter Property="Background" Value="PaleVioletRed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Cancelled">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>

                    </Style.Triggers>

                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />

                </Style>
            </DataGrid.RowStyle>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.CellStyle>

            <DataGrid.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </DataGrid.Resources>



        </DataGrid>


        <Button Grid.Row="4" Grid.Column="1"
                Width="32" Height="32"
                BorderThickness="1"
                BorderBrush="Black"
                Background="{DynamicResource DownloadPageBackground}"
                HorizontalAlignment="Right"
                Foreground="#413D65"
                Click="ButtonBase_OnClick"
                Command="{Binding ToggleDownloadCommand}">
            <Image Source="/Images/download-black.png"/>

            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2 2 2 2"/>
                </Style>
            </Button.Resources>
        </Button>

        <!-- Label TextBlocks - ugly-->
        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   FontSize="14"
                   VerticalAlignment="Bottom"
                   Margin="0 0 0 4"
                   Foreground="{DynamicResource DownloadPageBackground}">URLS</TextBlock>

        <TextBlock Grid.Row="2"
                   Grid.Column="0"
                   FontSize="14"
                   VerticalAlignment="Bottom"
                   Margin="0 0 0 4"
                   Foreground="{DynamicResource DownloadPageBackground}">Videos</TextBlock>
    </Grid>
</UserControl>
